{"version":3,"names":[],"mappings":"","sources":["landing.js"],"sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n\"use strict\";\n\nvar _interopRequire = function (obj) { return obj && obj.__esModule ? obj[\"default\"] : obj; };\n\nvar Detect = _interopRequire(require(\"./Detect.js\"));\n\nvar Background = _interopRequire(require(\"./Background.js\"));\n\nvar site = document.querySelector(\"#SITE\");\nvar background = new Background();\nbackground.render();\ndocument.body.appendChild(background.renderer.domElement);\n\n/////// HEADER ///////\nvar text = document.querySelectorAll(\"header #title .component h1\");\n//vary the direction that they're hidden\nfor (var i = 0; i < text.length; ++i) {\n    var variance = Math.random() * 2;\n\n    if (variance > 1) {\n        text[i].style.top = 20 + \"px\";\n    } else {\n        text[i].style.top = -20 + \"px\";\n    }\n}\nTweenMax.staggerTo(text, 1, {\n    top: 0,\n    ease: Power4.easeOut\n}, 0.2);\n\n/////// NAV ///////\nvar navItems = document.querySelectorAll(\"#nav .nav-item span\");\nvar navHover = document.querySelectorAll(\"#nav .nav-item .nav-hover\");\n\nfor (var i = 0; i < navItems.length; ++i) {\n    var variance = Math.random() * 2;\n\n    navItems[i].style.top = 103 + \"px\";\n\n    navItems[i].addEventListener(\"mouseover\", function () {\n        var hover = this.parentNode.children[0];\n        TweenMax.to(hover, 0.8, {\n            left: 0,\n            width: 100 + \"%\",\n            ease: Power4.easeOut\n        });\n    });\n\n    navItems[i].addEventListener(\"mouseout\", function () {\n        var hover = this.parentNode.children[0];\n\n        TweenMax.to(hover, 0.8, {\n            left: 300,\n            width: 0 + \"%\",\n            ease: Power4.easeOut,\n            onComplete: function onComplete() {\n                hover.style.left = -40 + \"px\";\n            }\n        });\n\n        hover.style.left = -40 + \"px\";\n    });\n}\n\nTweenMax.staggerTo(navItems, 1, {\n    top: 7,\n    ease: Power4.easeOut\n}, 0.2);\n\n/// MOBILE MESSAGE ////\nif (Detect.isMobileOS()) {\n    var message = document.createElement(\"h3\");\n    message.id = \"mobile-message\";\n\n    message.innerHTML = \"Joseph Chow is a developer currently residing in the San Francisco Bay Area and in the process of rebuilding this site, while also looking for new work.\" + \"<br/><br/>While it's understandable to you to be looking at this site from a mobile device, sadly, to show off some of what I'm capable\" + \" of and what I'd like to be doing, it really is better to be looking at this on your desktop.\";\n\n    site.appendChild(message);\n} else {\n    var message = document.createElement(\"h3\");\n    message.id = \"desktop-message\";\n    message.innerHTML = \"Joseph Chow is a developer currently residing in the San Francisco Bay Area.\" + \"I'm currently open to new opportunities, though outside of the product/start-up space. Always happy to travel and see new places\" + \"While the site is being rebuilt, here are some links you can check out in the meantime.\";\n\n    site.appendChild(message);\n    var links = [{\n        name: \"LinkedIn\",\n        url: \"http://www.linkedin.com/in/sortofsleepy\"\n    }, {\n        name: \"Bitbucket\",\n        url: \"http://www.bitbucket.org/sortofsleepy\"\n    }, {\n        name: \"Twitter\",\n        url: \"http://www.twitter.com/sortofsleepy\"\n    }, {\n        name: \"Vsco\",\n        url: \"http://sortofsleepy.vsco.co\"\n    }];\n    var linkList = document.createElement(\"ul\");\n    linkList.id = \"link-list\";\n    for (var i = 0; i < links.length; ++i) {\n        var a = document.createElement(\"a\");\n        a.href = links[i].url;\n        a.innerHTML = links[i].name;\n        a.className = \"external-link\";\n\n        var listItem = document.createElement(\"li\");\n        listItem.appendChild(a);\n\n        linkList.appendChild(listItem);\n    }\n\n    site.appendChild(linkList);\n}\n\n},{\"./Background.js\":2,\"./Detect.js\":4}],2:[function(require,module,exports){\n\"use strict\";\n\nvar _interopRequire = function (obj) { return obj && obj.__esModule ? obj[\"default\"] : obj; };\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var key in props) { var prop = props[key]; prop.configurable = true; if (prop.value) prop.writable = true; } Object.defineProperties(target, props); } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nvar _classCallCheck = function (instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } };\n\nvar PCloud = _interopRequire(require(\"./PCloud.js\"));\n\nvar Background = (function () {\n    function Background() {\n        _classCallCheck(this, Background);\n\n        var renderer = new THREE.WebGLRenderer({\n            alpha: true\n        });\n        var camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 1, 1000);\n        var scene = new THREE.Scene();\n\n        //renderer.setClearColor(0xffffff,1);\n        renderer.setSize(window.innerWidth, window.innerHeight);\n\n        window.addEventListener(\"resize\", function () {});\n\n        var size = 1024;\n        var array = new Float32Array(size * size * 4);\n\n        var positionsTexture = new THREE.DataTexture(array, size, size, THREE.RGBAFormat, THREE.FloatType);\n        positionsTexture.minFilter = THREE.NearestFilter;\n        positionsTexture.magFilter = THREE.NearestFilter;\n        positionsTexture.generateMipmaps = false;\n        positionsTexture.needsUpdate = true;\n\n        var geometry = new THREE.IcosahedronGeometry(150, 1);\n\n        var material = new THREE.MeshBasicMaterial({\n            color: 0 });\n\n        var mesh = new THREE.Mesh(geometry, material);\n        scene.add(mesh);\n        this.renderer = renderer;\n        this.camera = camera;\n        this.scene = scene;\n        this._buildFacePositions(geometry);\n    }\n\n    _createClass(Background, {\n        _buildFacePositions: {\n            value: function _buildFacePositions(geometry) {\n                var size = 1024;\n                //build face origins positions\n                var data = new Float32Array(size * size * 3);\n                var point = new THREE.Vector3();\n                var facesLength = geometry.faces.length;\n\n                for (var i = 0, l = data.length; i < l; i += 3) {\n\n                    var face = geometry.faces[Math.floor(Math.random() * facesLength)];\n\n                    var vertex1 = geometry.vertices[face.a];\n                    var vertex2 = geometry.vertices[Math.random() > 0.5 ? face.b : face.c];\n\n                    point.subVectors(vertex2, vertex1);\n                    point.multiplyScalar(Math.random());\n                    point.add(vertex1);\n\n                    data[i] = point.x;\n                    data[i + 1] = point.y;\n                    data[i + 2] = point.z;\n                }\n\n                //build cloud\n                var cloud = new PCloud(this.renderer);\n                cloud.setData(data);\n                cloud.buildOutput(this.scene);\n\n                this.cloud = cloud;\n            }\n        },\n        render: {\n            value: function render() {\n                var renderer = this.renderer;\n                var scene = this.scene;\n                var camera = this.camera;\n                var cloud = this.cloud;\n                animate();\n                function animate() {\n                    window.requestAnimationFrame(animate);\n\n                    var time = Date.now() * 0.001;\n\n                    camera.position.x = -Math.cos(time * 0.1);\n                    camera.position.z = Math.sin(time * 0.1);\n                    camera.lookAt(scene.position);\n\n                    cloud.setTimer(time);\n                    cloud.updateSim();\n                    renderer.render(scene, camera);\n                }\n            }\n        }\n    });\n\n    return Background;\n})();\n\nmodule.exports = Background;\n\n},{\"./PCloud.js\":5}],3:[function(require,module,exports){\n\"use strict\";\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var key in props) { var prop = props[key]; prop.configurable = true; if (prop.value) prop.writable = true; } Object.defineProperties(target, props); } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nvar _classCallCheck = function (instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } };\n\nvar count = 0;\n\nvar Composer = (function () {\n    function Composer(renderer, options) {\n        _classCallCheck(this, Composer);\n\n        //build the options.\n        this.options = options !== undefined ? this._buildOptions(options, renderer) : {\n            width: 720,\n            height: 720,\n            size: 720,\n            wrapS: THREE.RepeatWrapping,\n            wrapT: THREE.RepeatWrapping,\n            minFilter: THREE.NearestFilter,\n            magFilter: THREE.NearestFilter,\n            format: THREE.RGBAFormat,\n            stencilBuffer: false\n        };\n\n        if (options === undefined) {\n            this.buildType = \"three\";\n        }\n\n        //size of the texture to store data\n        this.size = 720;\n\n        //store size doubled\n        this.s2 = this.size * this.size;\n\n        //the processing passes to run on the item\n        this.passes = [];\n\n        //reference to the simulation program to apply values to\n        this.simulation = null;\n\n        //the uniform in the simulation thats set to get new values\n        this.receiver = null;\n\n        //counter to help swap between buffers\n        this.counter = 0;\n\n        //global uniforms for every type of pass\n        this.gUniforms = {\n            timer: {\n                type: \"f\",\n                value: 0\n            }\n        };\n\n        //const variable used to figure out which uniform to set the render target to.\n        this._renderTargetDestination = \"destination\";\n\n        if (renderer instanceof THREE.WebGLRenderer) {\n            this._buildThree(renderer);\n        }\n    }\n\n    _createClass(Composer, {\n        addPass: {\n\n            /**\n             *  Adds a pass to run onto the stack.\n             *  @param name a name for the pass which gets used as a id internally\n             *  @param source the fragment shader source for the pass\n             *  @param uniforms uniforms that are a part of the shader. Note - the destination that is supposed to be\n             *  receiving the calculated texture should have the property \"destination\" as part of it's object.\n             */\n\n            value: function addPass(name, source, uniforms) {\n                var pass = {};\n\n                if (this.buildType === \"three\") {\n                    pass.shader = new THREE.ShaderMaterial({\n                        vertexShader: this._getPassthru(),\n                        fragmentShader: source,\n                        uniforms: uniforms\n                    });\n                    for (var i in uniforms) {\n                        if (uniforms[i].hasOwnProperty(this._renderTargetDestination)) {\n                            pass.destination = pass.shader.uniforms[i];\n                        }\n                    }\n                }\n                this.passes.push(pass);\n            }\n        },\n        update: {\n\n            /**\n             *  Does all the calculatin and updates render targets appropriately.\n             *  TODO implement some kind of flag switching so that we don't have to referer to\n             *  a specific buffer. Complicated in javascript because !flag converts variable to boolean.\n             */\n\n            value: function update() {\n                //update global uniforms\n                //  this.gUniforms.timer.value = Date.now() * 0.0001;\n\n                for (var i = 0; i < this.passes.length; ++i) {\n                    var pass = this.passes[i];\n\n                    if (this.counter % 2 === 0) {\n                        pass.destination.value = this.rt_1;\n                        this.runPass(this.program, this.rt_2);\n                        this.renderShader.uniforms.map.value = this.rt_2;\n                    } else {\n                        pass.destination.value = this.rt_2;\n                        this.runPass(this.program, this.rt_1);\n                        this.renderShader.uniforms.map.value = this.rt_1;\n                    }\n\n                    this.counter++;\n                }\n            }\n        },\n        addPostProcessing: {\n\n            /**\n             *  Adds a post-processing effect\n             *  @param effect the post processing effect to add.\n             */\n\n            value: function addPostProcessing(effect) {}\n        },\n        setSimulation: {\n\n            //set the simulation shader to use\n\n            value: function setSimulation(shader) {\n                this.simulation = shader;\n            }\n        },\n        setOutput: {\n            value: function setOutput(shader) {\n                this.renderShader = shader;\n            }\n        },\n        runPass: {\n\n            //runs a pass against the specified target\n\n            value: function runPass(shader, target) {\n                this.mesh.material = shader;\n                this.renderer.render(this.scene, this.camera, target, false);\n            }\n        },\n        _buildThree: {\n\n            ////// THREE JS SPECIFIC STUFF ///////////\n\n            value: function _buildThree(renderer) {\n\n                var camera = new THREE.OrthographicCamera(-0.5, 0.5, 0.5, -0.5, 0, 1);\n                var scene = new THREE.Scene();\n                var mesh = new THREE.Mesh(new THREE.PlaneBufferGeometry(1, 1));\n                var renderer = renderer;\n                var size = this.size;\n                scene.add(mesh);\n\n                this.renderer = renderer;\n                this.mesh = mesh;\n                this.camera = camera;\n                this.scene = scene;\n\n                var rtTexturePos = new THREE.WebGLRenderTarget(size, size, {\n                    minFilter: THREE.NearestFilter,\n                    magFilter: THREE.NearestFilter,\n                    format: THREE.RGBAFormat,\n                    type: THREE.FloatType,\n                    stencilBuffer: false\n                });\n\n                var rtTexturePos2 = rtTexturePos.clone();\n\n                this.rt_1 = rtTexturePos;\n                this.rt_2 = rtTexturePos2;\n            }\n        },\n        _buildOptions: {\n\n            /////////// INTERNAL //////////////\n            /**\n             *  Build out the options object a little bit more, filing in\n             *  any missing attributes with the defaults\n             */\n\n            value: function _buildOptions(options, renderer) {\n                if (renderer instanceof THREE.WebGLRenderer) {\n                    //options for the buffering\n                    var defaults = {\n                        width: 720,\n                        height: 720,\n                        wrapS: THREE.RepeatWrapping,\n                        wrapT: THREE.RepeatWrapping,\n                        minFilter: THREE.NearestFilter,\n                        magFilter: THREE.NearestFilter,\n                        format: THREE.RGBAFormat,\n                        stencilBuffer: false\n                    };\n                    for (var a in defaults) {\n                        if (!options.hasOwnProperty(a)) {\n                            options[a] = defaults[a];\n                        }\n                    }\n\n                    this.buildType = \"three;\";\n                }\n            }\n        },\n        _getPassthru: {\n\n            /**\n             *  Generates a pass-thur vertex shader.\n             */\n\n            value: function _getPassthru() {\n\n                //still need to check for build type because\n                //Three.js provides some variables when constructing ShaderMaterial(s)\n                if (this.buildType === \"three\") {\n                    return [\"varying vec2 vUv;\", \"void main(){\", \"vUv = vec2(uv.x, 1.0 - uv.y);\", \"gl_Position = projectionMatrix * modelViewMatrix * vec4(position.xyz,1.0);\", \"}\"].join(\"\\n\");\n                }\n            }\n        },\n        _canUseWebGL2: {\n\n            /**\n             *  Tests for the capabilities to use WebGL2\n             */\n\n            value: function _canUseWebGL2() {\n                var canvas = document.createElement(\"canvas\");\n                // Try creating a WebGL 2 context first\n                var gl = canvas.getContext(\"webgl2\", { antialias: false });\n                if (!gl) {\n                    gl = canvas.getContext(\"experimental-webgl2\", { antialias: false });\n                }\n                var isWebGL2 = !!gl;\n                if (isWebGL2) {\n                    console.log(\"I can haz flag, so WebGL 2 is yes!\");\n                    return gl;\n                } else {\n                    return false;\n                }\n            }\n        }\n    });\n\n    return Composer;\n})();\n\nmodule.exports = Composer;\n\n},{}],4:[function(require,module,exports){\n\"use strict\";\n\nvar Detect = (function () {\n\n    var api = {\n\n        BROWSER_UNKNOWN: \"BROWSER_UNKNOWN\",\n        BROWSER_CHROME: \"Chrome\",\n        BROWSER_OMNI_WEB: \"OmniWeb\",\n        BROWSER_SAFARI: \"Safari\",\n        BROWSER_OPERA: \"Opera\",\n        BROWSER_ICAB: \"iCab\",\n        BROWSER_KONQUEROR: \"Konqueror\",\n        BROWSER_FIREFOX: \"Firefox\",\n        BROWSER_CAMINO: \"Camino\",\n        BROWSER_NETSCAPE: \"Netscape\",\n        BROWSER_EXPLORER: \"Explorer\",\n        BROWSER_MOZILLA: \"Mozilla\",\n\n        OS_UNKNOWN: \"OS_UNKNOWN\",\n        OS_WINDOWS_PHONE: \"Windows Phone\",\n        OS_WINDOWS: \"Windows\",\n        OS_MAC: \"Mac\",\n        OS_IPHONE_IPOD: \"iPhone/iPod\",\n        OS_IPAD: \"iPad\",\n        OS_ANDROID: \"Android\",\n        OS_LINUX: \"Linux\",\n\n        VERSION_UNKNOWN: -1,\n\n        getData: function getData() {\n            var parent = this;\n            return {\n                browser: detect.browser,\n                version: detect.version,\n                os: detect.OS,\n                isMobile: parent.isMobileOS()\n            };\n        },\n        /**\n         * Gets the current browser name\n         *\n         * @method getBrowser\n         * @return {String} A value represneted by a browserDetectService.BROWSER_XXXX constant\n         */\n        getBrowser: function getBrowser() {\n            return detect.browser;\n        },\n\n        /**\n         * Gets the current browser's version number\n         *\n         * @method getVersion\n         * @return {Number} Version number (float). browserDetectService.VERSION_UNKNOWN if not available.\n         */\n        getVersion: function getVersion() {\n            return detect.version;\n        },\n\n        /**\n         * Gets the current browser's operating system\n         *\n         * @method getOS\n         * @return {String} A value represneted by a browserDetectService.OS_XXXX constant\n         */\n        getOS: function getOS() {\n            return detect.OS;\n        },\n\n        /**\n         * If the app is running within a mobile OS, true will be returned. This uses a\n         * generalization of what is considered to be mobile OS.\n         *\n         * @method isMobileOS\n         * @return {Boolean} true if we're running on what we interpret to be a mobile platform.\n         */\n        isMobileOS: function isMobileOS() {\n            switch (api.getOS()) {\n                case api.OS_ANDROID:\n                case api.OS_IPAD:\n                case api.OS_IPHONE_IPOD:\n                case api.OS_WINDOWS_PHONE:\n                    return true;\n                    break;\n\n                default:\n                    return false;\n            }\n        }\n    };\n\n    /**\n     * Detect based on http://www.quirksmode.org/js/detect.html\n     * with the addition of a few OS objects and integration of ID constants.\n     * @param {Object} detect\n     */\n    var detect = {\n        init: function init() {\n            this.browser = this.searchString(this.dataBrowser) || api.BROWSER_UNKNOWN;\n            this.version = this.searchVersion(navigator.userAgent) || this.searchVersion(navigator.appVersion) || api.VERSION_UNKNOWN;\n            this.OS = this.searchString(this.dataOS) || api.OS_UNKNOWN;\n        },\n        searchString: function searchString(data) {\n            for (var i = 0; i < data.length; i++) {\n                var dataString = data[i].string;\n                var dataProp = data[i].prop;\n                this.versionSearchString = data[i].versionSearch || data[i].identity;\n                if (dataString) {\n                    if (dataString.indexOf(data[i].subString) != -1) {\n                        return data[i].identity;\n                    }\n                } else if (dataProp) {\n                    return data[i].identity;\n                }\n            }\n        },\n        searchVersion: function searchVersion(dataString) {\n            var index = dataString.indexOf(this.versionSearchString);\n            if (index == -1) {\n                return;\n            }return parseFloat(dataString.substring(index + this.versionSearchString.length + 1));\n        },\n        dataBrowser: [{\n            string: navigator.userAgent,\n            subString: \"Chrome\",\n            identity: api.BROWSER_CHROME\n        }, { string: navigator.userAgent,\n            subString: \"OmniWeb\",\n            versionSearch: \"OmniWeb/\",\n            identity: api.BROWSER_OMNI_WEB\n        }, {\n            string: navigator.vendor,\n            subString: \"Apple\",\n            identity: api.BROWSER_SAFARI,\n            versionSearch: \"Version\"\n        }, {\n            prop: window.opera,\n            identity: api.BROWSER_OPERA,\n            versionSearch: \"Version\"\n        }, {\n            string: navigator.vendor,\n            subString: \"iCab\",\n            identity: api.BROWSER_ICAB\n        }, {\n            string: navigator.vendor,\n            subString: \"KDE\",\n            identity: api.BROWSER_KONQUEROR\n        }, {\n            string: navigator.userAgent,\n            subString: \"Firefox\",\n            identity: api.BROWSER_FIREFOX\n        }, {\n            string: navigator.vendor,\n            subString: \"Camino\",\n            identity: api.BROWSER_CAMINO\n        }, { // for newer Netscapes (6+)\n            string: navigator.userAgent,\n            subString: \"Netscape\",\n            identity: api.BROWSER_NETSCAPE\n        }, {\n            string: navigator.userAgent,\n            subString: \"MSIE\",\n            identity: api.BROWSER_EXPLORER,\n            versionSearch: \"MSIE\"\n        }, {\n            string: navigator.userAgent,\n            subString: \"Gecko\",\n            identity: api.BROWSER_MOZILLA,\n            versionSearch: \"rv\"\n        }, { // for older Netscapes (4-)\n            string: navigator.userAgent,\n            subString: \"Mozilla\",\n            identity: api.BROWSER_NETSCAPE,\n            versionSearch: \"Mozilla\"\n        }],\n        dataOS: [{\n            string: navigator.userAgent,\n            subString: \"Windows Phone\",\n            identity: api.OS_WINDOWS_PHONE\n        }, {\n            string: navigator.platform,\n            subString: \"Win\",\n            identity: api.OS_WINDOWS\n        }, {\n            string: navigator.platform,\n            subString: \"Mac\",\n            identity: api.OS_MAC\n        }, {\n            string: navigator.userAgent,\n            subString: \"iPhone\",\n            identity: api.OS_IPHONE_IPOD\n        }, {\n            string: navigator.userAgent,\n            subString: \"iPad\",\n            identity: api.OS_IPAD\n        }, {\n            string: navigator.userAgent,\n            subString: \"Android\",\n            identity: api.OS_ANDROID\n        }, {\n            string: navigator.platform,\n            subString: \"Linux\",\n            identity: api.OS_LINUX\n        }]\n    };\n    detect.init();\n\n    return api;\n}).call(undefined);\n\ntry {\n    if (module !== undefined) {\n        module.exports = Detect;\n    }\n} catch (e) {}\n\n},{}],5:[function(require,module,exports){\n\"use strict\";\n\nvar _interopRequire = function (obj) { return obj && obj.__esModule ? obj[\"default\"] : obj; };\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var key in props) { var prop = props[key]; prop.configurable = true; if (prop.value) prop.writable = true; } Object.defineProperties(target, props); } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nvar _get = function get(object, property, receiver) { var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc && desc.writable) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nvar _inherits = function (subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) subClass.__proto__ = superClass; };\n\nvar _classCallCheck = function (instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } };\n\nvar Composer = _interopRequire(require(\"./Composer.js\"));\n\n\n\nvar PCloud = (function (_Composer) {\n    function PCloud(renderer, options) {\n        _classCallCheck(this, PCloud);\n\n        _get(Object.getPrototypeOf(PCloud.prototype), \"constructor\", this).call(this, renderer, options);\n\n        /*\n         var material = new THREE.ShaderMaterial( {\n         uniforms: {\n         tPositions: { type: \"t\", value: null },\n         tOrigins: { type: \"t\", value: null },\n         opacity: { type: \"f\", value: 0 },\n         timer: { type: \"f\", value: 0 }\n         },\n         vertexShader: glslify(\"./shaders/pass.vert.glsl\"),\n         fragmentShader:glslify(\"./shaders/simulation.glsl\"),\n         });\n         material.uniforms.opacity.value = 1.0;\n         this.program = material;*/\n\n        this.addPass(\"curl\", \"#define GLSLIFY 1\\n\\n uniform float opacity;\\n\\n\\t\\t\\t uniform sampler2D tPositions;\\n\\t\\t\\t uniform sampler2D tOrigins;\\n\\n\\t\\t\\t uniform float timer;\\n\\n\\t\\t\\t varying vec2 vUv;\\n\\n\\t\\t\\t float rand(vec2 co){\\n                 return fract(sin(dot(co.xy ,vec2(12.9898,78.233))) * 43758.5453);\\n\\t\\t\\t }\\n\\n\\t\\t\\t void main() {\\n\\n\\t\\t\\t \\tvec4 pos = texture2D( tPositions ,vUv );\\n        vec4 oPos = texture2D( tOrigins ,vUv );\\n\\n\\n\\t\\t\\t \\tif ( rand( vUv + timer ) > 0.99 || pos.w <= 0.0 ) {\\n\\n\\t\\t\\t \\t\\tpos.xyz = texture2D( tOrigins ,vUv ).xyz;\\n\\t\\t\\t \\t\\tpos.w = opacity;\\n\\n\\t\\t\\t \\t} else {\\n\\n\\t\\t\\t \\t\\tif ( pos.w <= 0.0 ) discard;\\n\\n\\t\\t\\t \\t\\tfloat x = pos.x + timer * 5.0;\\n\\t\\t\\t \\t\\tfloat y = pos.y;\\n\\t\\t\\t \\t\\tfloat z = pos.z + timer * 4.0;\\n\\n\\t\\t\\t \\t\\tpos.x += sin( y * 0.033 ) * cos( z * 0.037 ) * 0.4;\\n\\t\\t\\t \\t\\tpos.y += sin( x * 0.035 ) * cos( x * 0.035 ) * 0.4;\\n\\t\\t\\t \\t\\tpos.z += sin( x * 0.037 ) * cos( y * 0.033 ) * 0.4;\\n\\t\\t\\t \\t\\tpos.w -= 0.00001;\\n\\n\\t\\t\\t \\t}\\n\\n\\t\\t\\t \\tgl_FragColor = pos;\\n\\n\\t\\t\\t }\\n\", {\n            tPositions: { type: \"t\", value: null, destination: true },\n            tOrigins: { type: \"t\", value: null },\n            opacity: { type: \"f\", value: 1 },\n            timer: { type: \"f\", value: 0 }\n        });\n\n        this.program = this.passes[this.passes.length - 1].shader;\n    }\n\n    _inherits(PCloud, _Composer);\n\n    _createClass(PCloud, {\n        setPositionsTexture: {\n            value: function setPositionsTexture(texture) {\n                this.program.uniforms.tPositions.value = texture;\n                //this.program.uniforms.t_pos.value = texture;\n                return this.program;\n            }\n        },\n        setTimer: {\n            value: function setTimer(time) {\n                this.program.uniforms.timer.value = time;\n            }\n        },\n        setData: {\n            value: function setData(data) {\n                var size = this.size;\n                var originsTexture = new THREE.DataTexture(data, size, size, THREE.RGBFormat, THREE.FloatType);\n                originsTexture.minFilter = THREE.NearestFilter;\n                originsTexture.magFilter = THREE.NearestFilter;\n                originsTexture.generateMipmaps = false;\n                originsTexture.needsUpdate = true;\n                this.origins = originsTexture;\n                this.program.uniforms.tOrigins.value = originsTexture;\n            }\n        },\n        buildOutput: {\n            value: function buildOutput(scene) {\n                var size = this.size;\n                var geometry = new THREE.BufferGeometry();\n                var attribute = new THREE.BufferAttribute(new Float32Array(size * size * 3), 3);\n                geometry.addAttribute(\"position\", attribute);\n                var positions = geometry.getAttribute(\"position\").array;\n                for (var i = 0, j = 0, l = positions.length / 3; i < l; i++, j += 3) {\n                    positions[j] = i % size / size;\n                    positions[j + 1] = Math.floor(i / size) / size;\n                }\n                var particleMaterial = new THREE.ShaderMaterial({\n                    uniforms: {\n                        map: { type: \"t\", value: null },\n                        size: { type: \"f\", value: size },\n                        pointColor: { type: \"v3\", value: new THREE.Vector3(0.1, 0.25, 0.5) }\n\n                    },\n                    vertexShader: document.getElementById(\"vs-render\").textContent,\n                    fragmentShader: document.getElementById(\"fs-render\").textContent,\n                    blending: THREE.AdditiveBlending,\n                    depthWrite: false,\n                    // depthTest: false,\n                    transparent: true\n\n                });\n                this.renderShader = particleMaterial;\n                var mesh = new THREE.PointCloud(geometry, particleMaterial);\n                scene.add(mesh);\n\n                return particleMaterial;\n            }\n        },\n        updateSim: {\n            value: function updateSim(time) {\n                this.program.uniforms.timer.value = performance.now();\n                this.update();\n            }\n        }\n    });\n\n    return PCloud;\n})(Composer);\n\nmodule.exports = PCloud;\n\n},{\"./Composer.js\":3}]},{},[1]);\n"],"file":"landing.js","sourceRoot":"/source/"}